<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.js"></script>

<h2>Wellness Tracking</h2>
<hr />
<h4>Mood Tracker</h4>
<canvas id="moodChart" width="800" height="400"></canvas>
<br /><br />
<h4>Fitness Tracker</h4>
<canvas id="fitnessChart" width="800" height="400"></canvas>
<br /><br />
<h4>Nutrition Tracker</h4>
<canvas id="nutritionChart" width="800" height="400"></canvas>
<br /><br />

<script>
  var ctx = document.getElementById("moodChart").getContext("2d");

  var labels = [];
  var data = [];
  var bgColors = [];
  var borderColors = [];
  var mood = 0;
  for (i = 14; i >= 0; i--) {
    var date = new Date();
    date.setDate(date.getDate() - i);
    labels.push(`${date.getMonth() + 1}/${date.getDate()}`);
    var rand = Math.random();
    if (i == 14) {
      bgColors.push("rgba(0,255,0,0.2)");
      borderColors.push("rgba(0,255,0,1)");
      data.push(mood);
    } else if (rand < 0.2) {
      bgColors.push("rgba(255,0,0,0.2)");
      borderColors.push("rgba(255,0,0,1)");
      mood -= 1;
      data.push(mood);
    } else if (rand < 0.5) {
      bgColors.push("rgba(255,255,0,0.2)");
      borderColors.push("rgba(255,255,0,1)");
      data.push(mood);
    } else {
      bgColors.push("rgba(0,255,0,0.2)");
      borderColors.push("rgba(0,255,0,1)");
      mood += 1;
      data.push(mood);
    }
  }

  var moodChart = new Chart(ctx, {
    type: "line",
    data: {
      labels: labels,
      datasets: [
        {
          label: "Mood Level on Date",
          data: data,
          borderColor: "rgba(0,0,0,0.2)",
          borderWidth: 1,
          pointBackgroundColor: bgColors,
          pointBorderColor: borderColors,
          pointRadius: 5,
          fill: false
        }
      ]
    }
  });
</script>

<script>
  var ctx = document.getElementById("fitnessChart").getContext("2d");

  var labels = [];
  var data = [];
  var bgColors = [];
  var borderColors = [];
  for (i = 14; i >= 0; i--) {
    var date = new Date();
    date.setDate(date.getDate() - i);
    labels.push(`${date.getMonth() + 1}/${date.getDate()}`);

    var rand = Math.floor(Math.random() * 11);
    if (rand < 3) {
      bgColors.push("rgba(255,0,0,0.4)");
      borderColors.push("rgba(255,0,0,1)");
    } else if (rand < 6) {
      bgColors.push("rgba(255,255,0,0.4)");
      borderColors.push("rgba(255,255,0,1)");
    } else {
      bgColors.push("rgba(0,255,0,0.2)");
      borderColors.push("rgba(0,255,0,1)");
    }
    data.push(rand);
  }

  var fitnessChart = new Chart(ctx, {
    type: "bar",
    data: {
      labels: labels,
      datasets: [
        {
          label: "Hours of Activity",
          data: data,
          backgroundColor: bgColors,
          borderColor: borderColors,
          borderWidth: 1
        }
      ]
    },
    options: {
      scales: {
        yAxes: [
          {
            ticks: {
              beginAtZero: true
            }
          }
        ]
      }
    }
  });
</script>

<script>
  var ctx = document.getElementById("nutritionChart").getContext("2d");

  var labels = [];
  var dataHealthy = [];
  var dataUnhealthy = [];
  var bgColorsHealthy = [];
  var bgColorsUnhealthy = [];
  var borderColorsHealthy = [];
  var borderColorsUnhealthy = [];
  for (i = 14; i >= 0; i--) {
    var date = new Date();
    date.setDate(date.getDate() - i);
    labels.push(`${date.getMonth() + 1}/${date.getDate()}`);

    var randHealthy = Math.floor(Math.random() * 2000);
    if (randHealthy < 500) {
      bgColorsHealthy.push("rgba(255,0,0,0.4)");
      borderColorsHealthy.push("rgba(255,0,0,1)");
    } else if (randHealthy < 1000) {
      bgColorsHealthy.push("rgba(255,255,0,0.4)");
      borderColorsHealthy.push("rgba(255,255,0,1)");
    } else {
      bgColorsHealthy.push("rgba(0,255,0,0.2)");
      borderColorsHealthy.push("rgba(0,255,0,1)");
    }
    dataHealthy.push(randHealthy);

    var randUnhealthy = Math.floor(Math.random() * 2000);
    if (randUnhealthy > 1200) {
      bgColorsUnhealthy.push("rgba(255,0,0,0.4)");
      borderColorsUnhealthy.push("rgba(255,0,0,1)");
    } else if (randUnhealthy > 600) {
      bgColorsUnhealthy.push("rgba(255,255,0,0.4)");
      borderColorsUnhealthy.push("rgba(255,255,0,1)");
    } else {
      bgColorsUnhealthy.push("rgba(0,255,0,0.2)");
      borderColorsUnhealthy.push("rgba(0,255,0,1)");
    }
    dataUnhealthy.push(randUnhealthy);
  }

  var nutritionChart = new Chart(ctx, {
    type: "bar",
    data: {
      labels: labels,
      datasets: [
        {
          label: "Healthy Calories",
          data: dataHealthy,
          backgroundColor: "rgba(0,255,0,0.2)",
          borderColor: "rgba(0,255,0,1)",
          borderWidth: 1
        },
        {
          label: "Unhealthy Calories",
          data: dataUnhealthy,
          backgroundColor: "rgba(255,0,0,0.4)",
          borderColor: "rgba(255,0,0,1)",
          borderWidth: 1
        }
      ]
    },
    options: {
      scales: {
        yAxes: [
          {
            ticks: {
              beginAtZero: true
            },
            stacked: true
          }
        ],
        xAxes: [
          {
            stacked: true
          }
        ]
      }
    }
  });
</script>
